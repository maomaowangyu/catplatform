<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>src/main/java/${packageName}/${moduleName}/webtier/${subModuleName}</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
/**
 * Copyright &copy; 2012-2016 <a href="#">BasePlatform</a> All rights reserved.
 */
package ${packageName}.${moduleName}.webtier<#if subModuleName != "">.${subModuleName}</#if>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.galaxy.common.config.Global;
import com.galaxy.common.persistence.Page;
import com.galaxy.common.web.BaseController;
import com.galaxy.common.utils.StringUtils;
import ${packageName}.${moduleName}.domain<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "${r"${adminPath}"}/${urlPrefix}")
public class ${ClassName}Controller extends BaseController {

	@Autowired
	private ${ClassName}Service ${className}Service;
	
	@ModelAttribute
	public ${ClassName} get(@RequestParam(required=false) String id) {
		${ClassName} entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = ${className}Service.get(id);
		}
		if (entity == null){
			entity = new ${ClassName}();
		}
		return entity;
	}
	
	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = {"list.do", ""})
	public String list(${ClassName} ${className}, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<${ClassName}> page = ${className}Service.findPage(new Page<${ClassName}>(request, response), ${className}); 
		model.addAttribute("page", page);
		return "${lastPackageName}/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/list";
	}

	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "toAddPage.do")
	public String toAddPage(${ClassName} ${className}, Model model) {
		model.addAttribute("${className}", ${className});
		return "${lastPackageName}/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/add";
	}

	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "toModiPage.do")
	public String toModiPage(${ClassName} ${className}, Model model) {
		${ClassName} r = ${className}Service.get(${className});
		model.addAttribute("${className}", r);
		return "modules/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/modi";
	}

	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "save")
	public String save(${ClassName} ${className}, Model model, RedirectAttributes redirectAttributes, HttpServletRequest request, HttpServletResponse response) {
		if (!beanValidator(model, ${className})){
			model.addAttribute("message", "保存失败");
			//成功 success 失败 danger
			model.addAttribute("flag", "danger");
			return	list(${className},  request,  response,  model) ;
		}
		${className}Service.save(${className});

		model.addAttribute("message", "保存成功");
		//成功 success 失败 danger
		model.addAttribute("flag", "success");
		return	list(${className},  request,  response,  model) ;
	}
	
	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "delete")
	public String delete(${ClassName} ${className}, RedirectAttributes redirectAttributes, Model model, HttpServletRequest request, HttpServletResponse response) {
		${className}Service.delete(${className});
		model.addAttribute("message", "删除成功");
		//成功 success 失败 danger
		model.addAttribute("flag", "success");
		return list(${className},request,response,model);
	}

}]]>
	</content>
</template>